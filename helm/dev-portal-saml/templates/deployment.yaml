apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "template.fullname" . }}
  labels:
    app: {{ template "template.name" . }}
    chart: {{ template "template.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ template "template.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "template.name" . }}
        release: {{ .Release.Name }}
      annotations:
        # By default, kubernetes will not reload pods when secrets change. We need to
        # take the hash of the secrets and configs we depend on in order to trigger a reload.
        # https://github.com/helm/helm/blob/master/docs/charts_tips_and_tricks.md#automatically-roll-deployments-when-configmaps-or-secrets-change
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- if .Values.iamRole }}
        iam.amazonaws.com/role: "{{ .Values.iamRole }}"
        {{- end }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.image.override }}
          image: '{{ .Values.image.override }}'
          {{- else }}
          image: '{{ .Values.image.registry }}/{{ .Values.image.repo }}:{{ .Values.image.tag }}'
          {{- end }}
          # TODO : Add ports if needed, try to use descriptive names
          # For example...
          #
          ports:
            - name: port-8080 
              containerPort: 8080
            - name: port-8443
              containerPort: 8443
          securityContext:
            runAsUser: 65534
            allowPrivilegeEscalation: false
            # Required if the container attaches to a privileged port
            capabilities: 
              add: 
              - NET_BIND_SERVICE
          env:
            {{- range $key, $value := .Values.environment }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
            {{- range $key, $value := .Values.environmentFields }}
            - name: {{ $key }}
              valueFrom:
                fieldRef:
                  fieldPath: "{{ $value }}"
            {{- end }}
            - name: NEW_RELIC_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: new-relic-secrets
                  key: NEW_RELIC_LICENSE_KEY
                  optional: true
            {{- range $key, $value := .Values.secrets }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ template "template.fullname" $ }}
                  key: {{ $key }}
            {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
{{ toYaml .Values.readinessProbe | trimSuffix "\n" | indent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
{{ toYaml .Values.livenessProbe | trimSuffix "\n" | indent 12 }}
          {{- end }}
          {{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | trimSuffix "\n" | indent 12 }}
          {{- end }}

    # TODO : File mounts if needed
            # volumeMounts:
            # - name: <filename>
            #   mountPath: </mount/path>
      # volumes:
        # - name: <filename>
        #   secret:
            # secretName: {{ template "template.fullname" . }}-files-<filename>
            # items:
              # - key: <fliename>
              #   path: </secret/path>

